#!/usr/bin/env python3

import argparse
import json
import serial


parser = argparse.ArgumentParser(description="On/Off Keying Remote CLI")
parser.add_argument('--device', '-d', default="/dev/ttyACM0", help="Serial port connected to the ook-remote device.")
parser.add_argument("OOK_FILE", help="OOK data file to send.")

args = parser.parse_args()

# Everything before the first empty line is the json header.
# Everything after the first empty line is the data to transmit.
header_str = ""
data = []
reading_header = True
with open(args.OOK_FILE) as ook_file:
    for line in ook_file:
        line = line.strip()
        if reading_header:
            if line == "":
                reading_header = False
                continue
            header_str += line
        else:
            if line == "":
                continue
            data.append(line)

header = json.loads(header_str)

try:
    s = serial.Serial(
            port=args.device,
            baudrate=115200,
            bytesize=8,
            parity='N',
            stopbits=1,
            xonxoff=None,
            rtscts=True,
            dsrdtr=None
        )
except Exception as e:
    print("failed to open {}".format(args.device))
    raise e

if 'us-per-bit' in header:
    s.write('us-per-bit{}\n'.format(header["us-per-bit"]).encode('utf-8'))

for line in data:
    s.write('tx{}\n'.format(line).encode('utf-8'))

# Without this delay, not all written data makes it to the device.
# Calling s.flush() and s.close() instead of time.sleep() doesn't fix
# the problem.
import time
time.sleep(0.1)
